#!/bin/bash


if [ -d groupICA.dr ]; then
	mv groupICA.dr groupICA.dr.old
fi

mkdir groupICA.dr
mkdir groupICA.dr/log

# Modify these variables 
JOBS=28
OUTPUT=groupICA.dr
ICA_MAPS=groupICA/melodic_IC
DES_NORM=--des_norm
LOG_DIR=groupICA.dr/log
INPUT=`cat input_files.txt`
dm=design.mat
dc=design.con

# Don't change these (only NPERM if you have reason to)
NPERM=5000
DESIGN="-d $dm -t $dc"

## drA

echo Creating common masks...
j=0
for i in $INPUT; do 
echo /usr/local/fsl/bin/fslmaths $i -Tstd -bin ${OUTPUT}/mask_`zeropad $j 5` -odt char >> $LOG_DIR/run_mask
j=$(($j+1))
done

cat $LOG_DIR/run_mask | parallel -j $JOBS {}
wait
## drB
echo Merging masks...
fslmerge -t ${OUTPUT}/maskALL `imglob $OUTPUT/mask_*`
fslmaths ${OUTPUT}/maskALL -Tmin ${OUTPUT}/mask
mkdir masks
mv ${OUTPUT}/mask_* masks

## drC

echo Running dual regression...
j=0
for i in $INPUT; do 
s=subject`zeropad $j 5`
echo "fsl_glm -i $i -d $ICA_MAPS -o $OUTPUT/dr_stage1_${s}.txt --demean -m $OUTPUT/mask" >> $LOG_DIR/drC.1
echo "fsl_glm -i $i -d $OUTPUT/dr_stage1_${s}.txt -o $OUTPUT/dr_stage2_$s --out_z=$OUTPUT/dr_stage2_${s}_Z --demean -m $OUTPUT/mask $DES_NORM" >> $LOG_DIR/drC.2
echo "fslsplit $OUTPUT/dr_stage2_$s $OUTPUT/dr_stage2_${s}_ic" >> $LOG_DIR/drC.3
j=$(($j+1))
done

cat $LOG_DIR/drC.1 | parallel -j $JOBS {}
echo -e "\t Running stage 1 of 2..."
wait
cat $LOG_DIR/drC.2 | parallel -j $JOBS {}
echo -e "\t Running statge 2 of 2"
wait
cat $LOG_DIR/drC.3 | parallel -j $JOBS {}
wait

##

echo Sorting maps and running randomise...
VOLS=`fslnvols $ICA_MAPS`
j=0
while [ $j -lt $VOLS ] ; do
  jj=`zeropad $j 4`

  RAND=""
  if [ $NPERM -eq 1 ] ; then
    RAND="$FSLDIR/bin/randomise -i $OUTPUT/dr_stage2_ic$jj -o $OUTPUT/dr_stage3_ic$jj -m $OUTPUT/mask $DESIGN -n 1 -V -R"
  fi
  if [ $NPERM -gt 1 ] ; then
    # EDIT HERE
    RAND="$FSLDIR/bin/randomise -i $OUTPUT/dr_stage2_ic$jj -o $OUTPUT/dr_stage3_ic$jj -m $OUTPUT/mask $DESIGN -n $NPERM -T -V"
  fi

  echo "$FSLDIR/bin/fslmerge -t $OUTPUT/dr_stage2_ic$jj `imglob $OUTPUT/dr_stage2_subject*_ic${jj}.*`" >> ${LOG_DIR}/drD.1
  echo $RAND >> ${LOG_DIR}/drD.3
  j=`echo "$j 1 + p" | dc -`
done

cat ${LOG_DIR}/drD.1 | parallel -j $JOBS {}
wait
imrm `imglob $OUTPUT/dr_stage2_subject*_ic${jj}.*` 
cat ${LOG_DIR}/drD.3 | parallel -j $JOBS {}
echo Complete.





